class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
       List<List<Integer>> result = new ArrayList<>();
        
        if(root==null) return result;
        
        Queue<TreeNode> q= new LinkedList<>();
        q.offer(root);
        
        while(!q.isEmpty()){
            int queueCount= q.size();
            List<Integer> list = new ArrayList<>();
            while(queueCount>0){
                TreeNode curr= q.poll();
                
                   if(curr.left!=null) q.offer(curr.left);
                   if(curr.right!=null) q.offer(curr.right);
                
                list.add(curr.val);
                queueCount--;
                
            }
           result.add(list);
        }
        Collections.reverse(result);
        return result;
    }
}
